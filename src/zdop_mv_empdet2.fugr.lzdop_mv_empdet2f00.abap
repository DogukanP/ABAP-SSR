*---------------------------------------------------------------------*
*    view related FORM routines
*---------------------------------------------------------------------*
*...processing: ZDOP_MV_EMPDET2.................................*
FORM GET_DATA_ZDOP_MV_EMPDET2.
  PERFORM VIM_FILL_WHERETAB.
*.read data from database.............................................*
  REFRESH TOTAL.
  CLEAR   TOTAL.
  SELECT * FROM ZDOP_EMPDETAIL2 WHERE
(VIM_WHERETAB) .
    CLEAR ZDOP_MV_EMPDET2 .
ZDOP_MV_EMPDET2-MANDT =
ZDOP_EMPDETAIL2-MANDT .
ZDOP_MV_EMPDET2-EMPID =
ZDOP_EMPDETAIL2-EMPID .
ZDOP_MV_EMPDET2-EMPNAME =
ZDOP_EMPDETAIL2-EMPNAME .
ZDOP_MV_EMPDET2-BIRTHDATE =
ZDOP_EMPDETAIL2-BIRTHDATE .
ZDOP_MV_EMPDET2-ADDRESS =
ZDOP_EMPDETAIL2-ADDRESS .
ZDOP_MV_EMPDET2-SERIAL_NO =
ZDOP_EMPDETAIL2-SERIAL_NO .
ZDOP_MV_EMPDET2-HOBBIES =
ZDOP_EMPDETAIL2-HOBBIES .
<VIM_TOTAL_STRUC> = ZDOP_MV_EMPDET2.
    APPEND TOTAL.
  ENDSELECT.
  SORT TOTAL BY <VIM_XTOTAL_KEY>.
  <STATUS>-ALR_SORTED = 'R'.
*.check dynamic selectoptions (not in DDIC)...........................*
  IF X_HEADER-SELECTION NE SPACE.
    PERFORM CHECK_DYNAMIC_SELECT_OPTIONS.
  ELSEIF X_HEADER-DELMDTFLAG NE SPACE.
    PERFORM BUILD_MAINKEY_TAB.
  ENDIF.
  REFRESH EXTRACT.
ENDFORM.
*---------------------------------------------------------------------*
FORM DB_UPD_ZDOP_MV_EMPDET2 .
*.process data base updates/inserts/deletes.........................*
LOOP AT TOTAL.
  CHECK <ACTION> NE ORIGINAL.
MOVE <VIM_TOTAL_STRUC> TO ZDOP_MV_EMPDET2.
  IF <ACTION> = UPDATE_GELOESCHT.
    <ACTION> = GELOESCHT.
  ENDIF.
  CASE <ACTION>.
   WHEN NEUER_GELOESCHT.
IF STATUS_ZDOP_MV_EMPDET2-ST_DELETE EQ GELOESCHT.
     READ TABLE EXTRACT WITH KEY <VIM_XTOTAL_KEY>.
     IF SY-SUBRC EQ 0.
       DELETE EXTRACT INDEX SY-TABIX.
     ENDIF.
    ENDIF.
    DELETE TOTAL.
    IF X_HEADER-DELMDTFLAG NE SPACE.
      PERFORM DELETE_FROM_MAINKEY_TAB.
    ENDIF.
   WHEN GELOESCHT.
  SELECT SINGLE FOR UPDATE * FROM ZDOP_EMPDETAIL2 WHERE
  EMPID = ZDOP_MV_EMPDET2-EMPID AND
  EMPNAME = ZDOP_MV_EMPDET2-EMPNAME AND
  BIRTHDATE = ZDOP_MV_EMPDET2-BIRTHDATE AND
  ADDRESS = ZDOP_MV_EMPDET2-ADDRESS AND
  SERIAL_NO = ZDOP_MV_EMPDET2-SERIAL_NO .
    IF SY-SUBRC = 0.
    DELETE ZDOP_EMPDETAIL2 .
    ENDIF.
    IF STATUS-DELETE EQ GELOESCHT.
      READ TABLE EXTRACT WITH KEY <VIM_XTOTAL_KEY> BINARY SEARCH.
      DELETE EXTRACT INDEX SY-TABIX.
    ENDIF.
    DELETE TOTAL.
    IF X_HEADER-DELMDTFLAG NE SPACE.
      PERFORM DELETE_FROM_MAINKEY_TAB.
    ENDIF.
   WHEN OTHERS.
  SELECT SINGLE FOR UPDATE * FROM ZDOP_EMPDETAIL2 WHERE
  EMPID = ZDOP_MV_EMPDET2-EMPID AND
  EMPNAME = ZDOP_MV_EMPDET2-EMPNAME AND
  BIRTHDATE = ZDOP_MV_EMPDET2-BIRTHDATE AND
  ADDRESS = ZDOP_MV_EMPDET2-ADDRESS AND
  SERIAL_NO = ZDOP_MV_EMPDET2-SERIAL_NO .
    IF SY-SUBRC <> 0.   "insert preprocessing: init WA
      CLEAR ZDOP_EMPDETAIL2.
    ENDIF.
ZDOP_EMPDETAIL2-MANDT =
ZDOP_MV_EMPDET2-MANDT .
ZDOP_EMPDETAIL2-EMPID =
ZDOP_MV_EMPDET2-EMPID .
ZDOP_EMPDETAIL2-EMPNAME =
ZDOP_MV_EMPDET2-EMPNAME .
ZDOP_EMPDETAIL2-BIRTHDATE =
ZDOP_MV_EMPDET2-BIRTHDATE .
ZDOP_EMPDETAIL2-ADDRESS =
ZDOP_MV_EMPDET2-ADDRESS .
ZDOP_EMPDETAIL2-SERIAL_NO =
ZDOP_MV_EMPDET2-SERIAL_NO .
ZDOP_EMPDETAIL2-HOBBIES =
ZDOP_MV_EMPDET2-HOBBIES .
    IF SY-SUBRC = 0.
    UPDATE ZDOP_EMPDETAIL2 .
    ELSE.
    INSERT ZDOP_EMPDETAIL2 .
    ENDIF.
    READ TABLE EXTRACT WITH KEY <VIM_XTOTAL_KEY>.
    IF SY-SUBRC EQ 0.
      <XACT> = ORIGINAL.
      MODIFY EXTRACT INDEX SY-TABIX.
    ENDIF.
    <ACTION> = ORIGINAL.
    MODIFY TOTAL.
  ENDCASE.
ENDLOOP.
CLEAR: STATUS_ZDOP_MV_EMPDET2-UPD_FLAG,
STATUS_ZDOP_MV_EMPDET2-UPD_CHECKD.
MESSAGE S018(SV).
ENDFORM.
*---------------------------------------------------------------------*
FORM READ_SINGLE_ZDOP_MV_EMPDET2.
  SELECT SINGLE * FROM ZDOP_EMPDETAIL2 WHERE
EMPID = ZDOP_MV_EMPDET2-EMPID AND
EMPNAME = ZDOP_MV_EMPDET2-EMPNAME AND
BIRTHDATE = ZDOP_MV_EMPDET2-BIRTHDATE AND
ADDRESS = ZDOP_MV_EMPDET2-ADDRESS AND
SERIAL_NO = ZDOP_MV_EMPDET2-SERIAL_NO .
ZDOP_MV_EMPDET2-MANDT =
ZDOP_EMPDETAIL2-MANDT .
ZDOP_MV_EMPDET2-EMPID =
ZDOP_EMPDETAIL2-EMPID .
ZDOP_MV_EMPDET2-EMPNAME =
ZDOP_EMPDETAIL2-EMPNAME .
ZDOP_MV_EMPDET2-BIRTHDATE =
ZDOP_EMPDETAIL2-BIRTHDATE .
ZDOP_MV_EMPDET2-ADDRESS =
ZDOP_EMPDETAIL2-ADDRESS .
ZDOP_MV_EMPDET2-SERIAL_NO =
ZDOP_EMPDETAIL2-SERIAL_NO .
ZDOP_MV_EMPDET2-HOBBIES =
ZDOP_EMPDETAIL2-HOBBIES .
ENDFORM.
*---------------------------------------------------------------------*
FORM CORR_MAINT_ZDOP_MV_EMPDET2 USING VALUE(CM_ACTION) RC.
  DATA: RETCODE LIKE SY-SUBRC, COUNT TYPE I, TRSP_KEYLEN TYPE SYFLENG.
  FIELD-SYMBOLS: <TAB_KEY_X> TYPE X.
  CLEAR RC.
MOVE ZDOP_MV_EMPDET2-EMPID TO
ZDOP_EMPDETAIL2-EMPID .
MOVE ZDOP_MV_EMPDET2-EMPNAME TO
ZDOP_EMPDETAIL2-EMPNAME .
MOVE ZDOP_MV_EMPDET2-BIRTHDATE TO
ZDOP_EMPDETAIL2-BIRTHDATE .
MOVE ZDOP_MV_EMPDET2-ADDRESS TO
ZDOP_EMPDETAIL2-ADDRESS .
MOVE ZDOP_MV_EMPDET2-SERIAL_NO TO
ZDOP_EMPDETAIL2-SERIAL_NO .
MOVE ZDOP_MV_EMPDET2-MANDT TO
ZDOP_EMPDETAIL2-MANDT .
  CORR_KEYTAB             =  E071K.
  CORR_KEYTAB-OBJNAME     = 'ZDOP_EMPDETAIL2'.
  IF NOT <vim_corr_keyx> IS ASSIGNED.
    ASSIGN CORR_KEYTAB-TABKEY TO <vim_corr_keyx> CASTING.
  ENDIF.
  ASSIGN ZDOP_EMPDETAIL2 TO <TAB_KEY_X> CASTING.
  PERFORM VIM_GET_TRSPKEYLEN
    USING 'ZDOP_EMPDETAIL2'
    CHANGING TRSP_KEYLEN.
  <VIM_CORR_KEYX>(TRSP_KEYLEN) = <TAB_KEY_X>(TRSP_KEYLEN).
  PERFORM UPDATE_CORR_KEYTAB USING CM_ACTION RETCODE.
  ADD: RETCODE TO RC, 1 TO COUNT.
  IF RC LT COUNT AND CM_ACTION NE PRUEFEN.
    CLEAR RC.
  ENDIF.

ENDFORM.
*---------------------------------------------------------------------*
